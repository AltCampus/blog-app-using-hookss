{"ast":null,"code":"var _jsxFileName = \"/home/somanshu/Desktop/altcampus/REACT/blog-app/blog-app/src/components/comment.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super();\n    this.handleInput = _ref => {\n      let {\n        target\n      } = _ref;\n      let {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.checkInput = () => {\n      let {\n        comment\n      } = this.state;\n      if (!comment) {\n        this.setState({\n          error: \"comment required to add*\"\n        });\n      }\n    };\n    this.addComment = () => {\n      let {\n        comment\n      } = this.state;\n      fetch(`https://mighty-oasis-08080.herokuapp.com/api/articles/${this.props.slug}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Token ${this.props.user.token}`\n        },\n        body: JSON.stringify({\n          comment: {\n            body: comment\n          }\n        })\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error(\"cant add new comment\");\n        }\n        return res.json();\n      }).then(comment => {\n        console.log(comment);\n      }).catch(errors => {\n        this.setState({\n          error: errors.error\n        });\n      });\n    };\n    this.state = {\n      comment: \"\",\n      error: \"\"\n    };\n  }\n  render() {\n    let {\n      comment,\n      error\n    } = this.state;\n    let formControlClass = \"text-sm rounded-md w-full py-1 px-4 my-2 border-2 border-solid border-blue-900 text-blue-900\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" w-1/3 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          this.checkInput();\n          if (!error) {\n            this.addComment();\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500 text-sm\",\n          children: this.state.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: formControlClass,\n          placeholder: \"Write comment\",\n          rows: 3,\n          onChange: this.handleInput,\n          value: comment,\n          name: \"comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Comment\",\n          className: `bg-blue-300 blue ${formControlClass}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Comment","Component","constructor","props","handleInput","target","name","value","setState","checkInput","comment","state","error","addComment","fetch","slug","method","headers","authorization","user","token","body","JSON","stringify","then","res","ok","Error","json","console","log","catch","errors","render","formControlClass","event","preventDefault"],"sources":["/home/somanshu/Desktop/altcampus/REACT/blog-app/blog-app/src/components/comment.js"],"sourcesContent":["import React from \"react\";\n\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      comment: \"\",\n      error: \"\",\n    };\n  }\n  handleInput = ({ target }) => {\n    let { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  checkInput = () => {\n    let { comment } = this.state;\n    if (!comment) {\n      this.setState({\n        error: \"comment required to add*\",\n      });\n    }\n  };\n  addComment = () => {\n    let { comment } = this.state;\n    fetch(\n      `https://mighty-oasis-08080.herokuapp.com/api/articles/${this.props.slug}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Token ${this.props.user.token}`,\n        },\n        body: JSON.stringify({\n          comment: {\n            body: comment,\n          },\n        }),\n      }\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"cant add new comment\");\n        }\n        return res.json();\n      })\n      .then((comment) => {\n        console.log(comment);\n      })\n      .catch((errors) => {\n        this.setState({\n          error: errors.error,\n        });\n      });\n  };\n  render() {\n    let { comment, error } = this.state;\n    let formControlClass =\n      \"text-sm rounded-md w-full py-1 px-4 my-2 border-2 border-solid border-blue-900 text-blue-900\";\n\n    return (\n      <div className=\" w-1/3 mx-auto\">\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.checkInput();\n            if (!error) {\n              this.addComment();\n            }\n          }}\n        >\n          <span className=\"text-red-500 text-sm\">{this.state.comment}</span>\n          <textarea\n            className={formControlClass}\n            placeholder=\"Write comment\"\n            rows={3}\n            onChange={this.handleInput}\n            value={comment}\n            name=\"comment\"\n          ></textarea>\n          <input\n            type=\"submit\"\n            value=\"Add Comment\"\n            className={`bg-blue-300 blue ${formControlClass}`}\n          ></input>\n        </form>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}